<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.MovieDao">
    <resultMap type="Movie" id="movieResultMap" >
        <id property="movieId" column="movieid"/>
        <result property="movieName" column="moviename"/>
        <result property="releaseTime" column="releasetime"/>
        <result property="director" column="director"/>
        <result property="leadActors" column="leadactors"/>
        <result property="picture" column="picture"/>
        <result property="averating" column="averating"/>
        <result property="numrating" column="numrating"/>
        <result property="description" column="description"/>
        <result property="typeList" column="typelist"/>
    </resultMap>
    <insert id="addMovie" parameterType="Movie">
        INSERT INTO movieinfo(moviename,releasetime,director,leadactors,picture,averating,numrating,description,typelist)
        VALUE (#{movieName}, #{releaseTime}, #{director},#{leadActors},#{picture}, #{averating}, #{numrating},#{description},#{typeList})
    </insert>

    <delete id="deleteMovieById" parameterType="int">
        DELETE FROM movieinfo WHERE movieid=#{movieId}
    </delete>

    <update id="updateMovie" parameterType="Movie">
        UPDATE movieinfo
        SET moviename = #{movieName},
        releasetime = #{releaseTime},
        director = #{director},
        leadactors = #{leadActors},
        picture = #{picture},
        averating = #{averating},
        numrating = #{numrating},
        description = #{description},
        typelist = #{typeList}
        WHERE  movieid = #{movieId}
    </update>

    <select id="queryById" resultMap="movieResultMap" parameterType="int">
        SELECT movieid,moviename,releasetime,director,leadactors,picture,averating,numrating,description,typelist
        FROM movieinfo
        WHERE movieid=#{movieId}
    </select>

    <select id="queryAllMovies" resultMap="movieResultMap">
        SELECT movieid,moviename,releasetime,director,leadactors,picture,averating,numrating,description,typelist
        FROM movieinfo
        LIMIT 50
    </select>

    <!-- 查询用户记录总数 -->
    <select id="selectCount" resultType="int">
        select count(*) from movieinfo
    </select>

    <!-- 根据分页数据start 和size查询数据 -->
    <select id="findByPage" parameterType="Map" resultMap="movieResultMap">
        select movieid,moviename,releasetime,director,leadactors,picture,averating,numrating,description,typelist
        from movieinfo
        <if test="start!=null and size!=null">
            limit #{start},#{size}
        </if>
    </select>

    <select id="queryMovieByUid" parameterType="int" resultType="int">
        select movieid
        from recommendresult
        where userid = #{id}
    </select>

    <select id="queryMovieRandomly" resultMap="movieResultMap">
        select *
        from movieinfo
        order by releasetime
        desc limit 1000
    </select>

</mapper>