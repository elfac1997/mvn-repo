<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.RatingDao">
    <resultMap type="Rating" id="ratingResultMap" >
        <result property="userId" column="userid"/>
        <result property="movieId" column="movieid"/>
        <result property="timeStamp" column="timestamp"/>
        <result property="rating" column="rating"/>
    </resultMap>

    <resultMap id="RatingWithMovie" type="Rating" extends="ratingResultMap">
        <!--由于继承了OrderResultMap 所以这里就不用再写order表的信息了-->
        <!--用户表信息-->
        <association property="movie" javaType="Movie" autoMapping="true">
            <id column="movieid" property="movieId"></id>
            <result column="moviename" property="movieName"></result>
            <result column="picture" property="picture"></result>
        </association>
    </resultMap>

    <insert id="addRating" parameterType="Rating">
        INSERT INTO personalratings(userid,movieid,rating,timestamp)
        VALUE (#{userId}, #{movieId}, #{rating},#{timeStamp})
    </insert>

    <delete id="deleteRatingByIds" parameterType="Map">
        DELETE FROM personalratings WHERE userid=#{uid} and movieid=#{mid}
    </delete>

    <update id="updateRating" parameterType="Rating">
        UPDATE personalratings
        SET
        rating = #{rating},
        timestamp = #{timeStamp}
        WHERE userid=#{userId} and movieid=#{movieId}
    </update>

    <select id="queryByIds" parameterType="Map" resultMap="ratingResultMap">
        SELECT userid,movieid,rating,timestamp
        FROM personalratings
        WHERE userid=#{uid} and movieid=#{mid}
    </select>

    <select id="queryUserRatings" resultMap="ratingResultMap">
        SELECT userid,movieid,rating,timestamp
        FROM personalratings
        LIMIT 50
    </select>

    <select id="selectCount" resultType="int">
        select count(*) from personalratings
    </select>

    <select id="selectUserCount" parameterType="int" resultType="int">
        select count(*)
        from personalratings
        where userid=#{userId}
    </select>

    <select id="findByPage" parameterType="Map" resultMap="ratingResultMap">
        select userid,movieid,rating,timestamp
        from personalratings
        <if test="start!=null and size!=null">
            limit #{start},#{size}
        </if>
    </select>

<!--    <select id="findUserRatingByPage" parameterType="Map" resultMap="ratingResultMap">-->
<!--        select userid,movieid,rating,timestamp-->
<!--        from personalratings-->
<!--        where userid=#{uid}-->
<!--        <if test="start!=null and size!=null">-->
<!--            limit #{start},#{size}-->
<!--        </if>-->
<!--    </select>-->

    <select id="findUserRatingByPage" parameterType="Map" resultMap="RatingWithMovie">
        select * from personalratings as p left join movieinfo as m on p.movieid = m.movieid
        where p.userid=#{uid}
        <if test="start!=null and size!=null">
            limit #{start},#{size}
        </if>
    </select>

</mapper>